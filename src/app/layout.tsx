import { DevtoolsProvider } from "@providers/devtools";
import { ThemedLayoutV2, useNotificationProvider } from "@refinedev/antd";
import { GitHubBanner, Refine } from "@refinedev/core";
import { RefineKbar, RefineKbarProvider } from "@refinedev/kbar";
import routerProvider from "@refinedev/nextjs-router";
import { Metadata } from "next";
import { cookies } from "next/headers";
import React, { Suspense } from "react";

import { AntdRegistry } from "@ant-design/nextjs-registry";
import { AppIcon } from "@components/app-icon";
import { ColorModeContextProvider } from "@contexts/color-mode";
import { authProviderClient } from "@providers/auth-provider/auth-provider.client";
import { dataProvider } from "@providers/data-provider";
import "@refinedev/antd/dist/reset.css";
import {
  BarcodeOutlined,
  BlockOutlined,
  ContactsOutlined,
  HomeFilled,
  ProductFilled,
  RiseOutlined,
  ShoppingFilled,
  TagFilled,
} from "@ant-design/icons";

export const metadata: Metadata = {
  title: "Refine",
  description: "Generated by create refine app",
  icons: {
    icon: "/favicon.ico",
  },
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = cookies();
  const theme = cookieStore.get("theme");
  const defaultMode = theme?.value === "dark" ? "dark" : "light";

  return (
    <html lang="en">
      <body>
        <Suspense>
          {/* <GitHubBanner /> */}
          <RefineKbarProvider>
            <AntdRegistry>
              <ColorModeContextProvider defaultMode={defaultMode}>
               
                  <Refine
                  options={{
                    disableTelemetry:true,
                    reactQuery:{
                      clientConfig:{
                        defaultOptions:{
                          queries:{
                            networkMode: "always"
                          },
                          mutations:{
                            networkMode: "always"
                          }
                        }
                      }
                    }
                  }

                  }
                    routerProvider={routerProvider}
                    dataProvider={dataProvider}
                    notificationProvider={useNotificationProvider}
                    authProvider={authProviderClient}
                    resources={[
                      {
                        name: "Shop",
                        meta: {
                          icon: <ShoppingFilled />
                        }
                      },
                      {
                        name: "product",
                        parentName: "Shop",
                        list: "/product",
                        create: "/product/create",
                        edit: "/product/edit/:id",
                        show: "/product/show/:id",
                        meta: {
                          canDelete: true,
                          icon: <ProductFilled />,
                        },
                      },
                      {
                        parentName: "Shop",
                        name: "productType",
                        list: "/productType",
                        create: "/productType/create",
                        edit: "/productType/edit/:id",
                        show: "/productType/show/:id",
                        meta: {
                          canDelete: true,
                          icon: <TagFilled />,
                        },
                      },
                      {
                        parentName: "Shop",
                        name: "category",
                        list: "/category",
                        create: "/category/create",
                        edit: "/category/edit/:id",
                        show: "/category/show/:id",
                        meta: {
                          canDelete: true,
                          icon: <TagFilled />,
                        },
                      },
                      {
                        name: "customer",
                        list: "/customer",
                        create: "/customer/create",
                        edit: "/customer/edit/:id",
                        show: "/customer/show/:id",
                        meta: {
                          canDelete: true,
                          icon: <ContactsOutlined />,
                        },
                      },
                      {
                        name: "vender",
                        list: "/vender",
                        create: "/vender/create",
                        edit: "/vender/edit/:id",
                        show: "/vender/show/:id",
                        meta: {
                          canDelete: true,
                          icon: <ContactsOutlined />,
                        },
                      },
                      {
                        name: "My Store",
                      },
                      {
                        parentName: "My-Store",
                        name: "stores",
                        list: "/stores",
                        create: "/stores/create",
                        edit: "/stores/edit/:id",
                        show: "/stores/show/:id",
                        meta: {
                          title: "List",
                          icon: <HomeFilled />,
                        },
                      },
                      {
                        parentName: "My-Store",
                        name: "store-type",
                        list: "/store-type",
                        create: "/store-type/create",
                        edit: "/store-type/edit/:id",
                        show: "/store-type/show/:id",
                        meta: {
                          canDelete: true,
                        },
                      },
                      {
                        name: "Stock",
                        meta: {
                          icon: <BlockOutlined /> 
                        }
                      },
                      {
                        parentName: "Stock",
                        name: "stock",
                        list: "/stock",
                        create: "/stock/create",
                        edit: "/stock/print/:id",
                        show: "/stock/show/:id",
                       // print: "/stock/print/:id",
                        meta: {
                          canDelete: true,
                          icon: <RiseOutlined/>
                        },
                      },
                      {
                        parentName: "Stock",
                        name: "Barcode",
                        list: "/barcode",
                        //create: "/barcode/create",
                       // edit: "/barcode/print/:id",
                       // show: "/barcode/show/:id",
                        meta: {
                          canDelete: true,
                          icon: <BarcodeOutlined/>
                        },
                      },
                      {
                      
                        name: "pos",
                        list: "/pos",
                        create: "/stock/create",
                        edit: "/stock/edit/:id",
                        show: "/stock/show/:id",
                        meta: {
                          canDelete: true,
                          icon: <RiseOutlined/>
                        },
                      },
                      {
                      
                        name: "order",
                        list: "/order",
                        create: "/order/create",
                        edit: "/order/edit/:id",
                        show: "/order/show/:id",
                        meta: {
                          canDelete: true,
                          icon: <RiseOutlined/>
                        },
                      },
                    ]}
                  >
                    {children}
                  </Refine>
               
              </ColorModeContextProvider>
              {/* </ConfigProvider> */}
            </AntdRegistry>
          </RefineKbarProvider>
        </Suspense>
      </body>
    </html>
  );
}
